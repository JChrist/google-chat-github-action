{
  "name": "google-chat-github-action",
  "description": "Send a google chat notification from a GitHub Action",
  "version": "1.0.0",
  "author": "jchrist",
  "private": true,
  "license": "MIT",
  "homepage": "https://github.com/jchrist/google-chat-github-action#readme",
  "repository": {"type": "git", "url": "git+https://github.com/jchrist/google-chat-github-action.git"},
  "bugs": {"url": "https://github.com/jchrist/google-chat-github-action/issues"},
  "keywords": ["GitHub", "Actions", "Google", "Chat", "notification"],
  "exports": {".": "./dist/index.js"},
  "engines": {"node": ">=20"},
  "scripts": {
    "bundle": "npm run format:write && npm run package",
    "ci-test": "jest",
    "format:write": "prettier --write **/*.js",
    "format:check": "prettier --check **/*.js",
    "lint": "npx eslint . -c ./.github/linters/.eslintrc.yml",
    "package": "ncc build src/index.js --license licenses.txt",
    "package:watch": "npm run package -- --watch",
    "test": "(jest && make-coverage-badge --output-path ./badges/coverage.svg) || make-coverage-badge --output-path ./badges/coverage.svg",
    "svg": "svgexport ./assets/svgexport.js",
    "all": "npm run format:write && npm run lint && npm run test && npm run svg && npm run package"
  },
  "dependencies": {
    "@actions/core": "^1.10.1",
    "@actions/github": "^6.0.0",
    "axios": "^1.6.8"
  },
  "devDependencies": {
    "@babel/core": "^7.24.3",
    "@babel/eslint-parser": "^7.24.1",
    "@babel/preset-env": "^7.24.3",
    "@vercel/ncc": "^0.38.1",
    "babel-preset-jest": "^29.6.3",
    "eslint": "^8.57.0",
    "eslint-plugin-github": "^4.10.2",
    "eslint-plugin-jest": "^27.9.0",
    "jest": "^29.7.0",
    "make-coverage-badge": "^1.2.0",
    "prettier": "^3.2.5",
    "svgexport": "^0.4.2"
  },
  "eslintConfig": {"extends": "./.github/linters/.eslintrc.yml"},
  "jest": {
    "verbose": true,
    "clearMocks": true,
    "testEnvironment": "node",
    "moduleFileExtensions": ["js"],
    "testMatch": ["**/*.test.js"],
    "testPathIgnorePatterns": ["/node_modules/", "/dist/"],
    "coverageReporters": ["json-summary", "text", "lcov"],
    "collectCoverage": true,
    "collectCoverageFrom": ["./src/**"]
  }
}
